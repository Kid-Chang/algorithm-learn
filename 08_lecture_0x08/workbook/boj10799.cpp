#include <bits/stdc++.h>

using namespace std;

// 쇠막대기

// 조건
// 쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있다. 
// 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓는다.
// 각 쇠막대기를 자르는 레이저는 적어도 하나 존재한다.
// 레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않는다.

// 레이저는 여는 괄호와 닫는 괄호의 인접한 쌍 ‘( ) ’ 으로 표현된다. 또한, 모든 ‘( ) ’는 반드시 레이저를 표현한다.
// 쇠막대기의 왼쪽 끝은 여는 괄호 ‘ ( ’ 로, 오른쪽 끝은 닫힌 괄호 ‘) ’ 로 표현된다.

// 쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 주어졌을 때, 잘려진 쇠막대기 조각의 총 개수를 구하는 프로그램을 작성하시오.


// 입력 
// 한 줄에 쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 공백없이 주어진다. 괄호 문자의 개수는 최대 100,000이다.


// 출력
// 잘려진 조각의 총 개수를 나타내는 정수를 한 줄에 출력한다.


// 힌트
// 괄호 쌍을 볼 때 지금 보고 있는 이 닫힌 괄호가 레이저를 의미하는지 
// 쇠막대기를 의미하는지는 그 앞의 괄호를 보면 알 수 있을 것입니다. 
// 그리고 레이저를 쏠 때 몇 개의 막대기가 잘려나가는지는 그 순간에 
// 스택의 길이와 연관을 해서 생각해보시면 뭔가 느낌이 올 수도 있습니다.

 

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    
    string inputValue;
    cin >> inputValue;
    int ans = 0;
    
    stack<char> S;
    for( int i = 0; i < inputValue.size(); i++){
        if(inputValue[i]=='(')
            S.push(inputValue[i]);
        else{ 
            //if(!S.empty() && S.top()=='('){ // 이렇게 하면 "막대기"의 끝인지 모르지.
            if(inputValue[i-1]=='('){
                S.pop();
                ans += S.size();
            }
            else{ // 막대의 끝일 경우
                S.pop();
                ans++;
            }
        }
    }
    
    cout << ans;
    return 0;
}